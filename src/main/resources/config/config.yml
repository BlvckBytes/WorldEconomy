#___       __            _______________________
#  __ |     / /_______________  /_____  /__  ____/_______________________________ ________  __
#  __ | /| / /_  __ \_  ___/_  /_  __  /__  __/  _  ___/  __ \_  __ \  __ \_  __ `__ \_  / / /
#  __ |/ |/ / / /_/ /  /   _  / / /_/ / _  /___  / /__ / /_/ /  / / / /_/ /  / / / / /  /_/ /
#  ____/|__/  \____//_/    /_/  \__,_/  /_____/  \___/ \____//_/ /_/\____//_/ /_/ /_/_\__, /
#                                                                                   /____/
#
# WorldEconomy - Developed by BlvckBytes <blvckbytes@gmail.com>
# Repository - https://github.com/BlvckBytes/WorldEconomy
# ASCII-Art - https://patorjk.com/software/taag/#p=display&f=Speed
#
# PRE-PROCESSOR-INPUT en_us.txt

commands:
  balance:
    name: bal
    aliases:
      - balance
  money:
    name: money
  pay:
    name: pay
  balanceTop:
    name: baltop
    aliases:
      - balancetop
  reload:
    name: wereload
    aliases:
      - worldeconomyreload
  balances:
    name: bals
    aliases:
      - balances

worldGroups:
  world:
    displayName: '&6World'
    members:
      - world
      - world_nether
      - world_the_end

economy:
  # Duration in-between writing accounts from memory to their corresponding files
  # Too little gaps will cause needless lag, too large may result in data-loss on unexpected shutdowns
  cacheWritePeriodSeconds: 30
  # For how long to keep accounts of offline-players in memory
  offlinePlayerCacheSeconds: 300
  topListSize: 5
  nameSingular: 'Euro'
  namePlural: 'Euros'
  startingBalance: 200.0
  # Set to null for no upper bound
  maxMoney: null
  # Set to null for no lower bound
  minMoney: -1000.0
  # Whether to clamp existing accounts to the [min;max]-interval as specified above when loading them
  doClampOnLoad: true
  # Set to null for no lower bound
  minPayAmount: .001

  # Set to null to not render
  currencyFormatPrefix: 'â‚¬ '
  # Set to null to not render
  currencyFormatSuffix: null
  currencyFormat:
    # https://en.wikipedia.org/wiki/IETF_language_tag#List_of_common_primary_language_subtags
    subtagName: 'en'
    # https://docs.oracle.com/javase/8/docs/api/index.html?java/math/RoundingMode.html
    roundingMode: FLOOR
    useGrouping: true
    minimumFractionDigits: 2
    maximumFractionDigits: 2

playerMessages:
  missingPermissionBalancesSelfCommand$: 'lut["MESSAGE_PREFIX"] & "&cYou do not have permission to use the balances command."'
  missingPermissionBalancesOtherCommand$: 'lut["MESSAGE_PREFIX"] & "&cYou do not have permission to view the balances of others."'
  playerOnlyBalancesSelfCommand$: 'lut["MESSAGE_PREFIX"] & "&cOnly a player can view their own balance."'
  # label: String
  usageBalancesCommandSelf$: 'lut["MESSAGE_PREFIX"] & "&cUsage: /" & label'
  # label: String
  usageBalancesCommandOther$: 'lut["MESSAGE_PREFIX"] & "&cUsage: /" & label & " [player]"'
  couldNotLoadAccountSelf$: 'lut["MESSAGE_PREFIX"] & "&cCould not load your account."'
  # name: String
  couldNotLoadAccountOther$: 'lut["MESSAGE_PREFIX"] & "&cThe player &4" & name & " &chas not played on this server before."'
  # - holder: String
  # - balances: Map<String, String>
  # The key of balances represents the display-name of the world-group, the value its corresponding formatted balance
  balancesScreen$: |
    flatten(
      "&8&m                                                  ",
      "&7Balances of &e" & holder & "&7:",
      map(balances, (balance) => (
        "&8- &e" & key(balance) & "&7: &e" & value(balance)
      ), "&cNo world-groups found"),
      "&8&m                                                  "
    )
  notInAnyWorldGroupSelf$: 'lut["MESSAGE_PREFIX"] & "&cYou''re currently not within any known world-group."'
  # name: String
  notInAnyWorldGroupOther$: 'lut["MESSAGE_PREFIX"] & "&cThe player &4" & name & " &cis currently not within any known world-group."'
  # name: String
  unknownWorldGroup$: 'lut["MESSAGE_PREFIX"] & "&cCould not locate a world-group by the name of &4" & name & "&c."'
  # label: String
  usageBalanceCommandSelf$: 'lut["MESSAGE_PREFIX"] & "&cUsage: /" & label'
  # label: String
  # group_names: String
  usageBalanceCommandOther$: 'lut["MESSAGE_PREFIX"] & "&cUsage: /" & label & " [" & iter_cat(group_names, (group_name) => "&e" & group_name, "&7, ") & "&c] [player]"'
  # holder: String
  # balance: String
  # group: String
  balanceMessageSelf$: 'lut["MESSAGE_PREFIX"] & "&7Your balance in &e" & group & " &7is &e" & balance & "&7."'
  # holder: String
  # balance: String
  # group: String
  balanceMessageOther$: 'lut["MESSAGE_PREFIX"] & "&e" & holder & "''s &7balance in &e" & group & " &7is &e" & balance & "&7."'
  missingPermissionBalanceSelfCommand$: 'lut["MESSAGE_PREFIX"] & "&cYou do not have permission to use the balance command."'
  missingPermissionBalanceOtherCommand$: 'lut["MESSAGE_PREFIX"] & "&cYou do not have permission to view the balance of others."'
  playerOnlyBalanceSelfCommand$: 'lut["MESSAGE_PREFIX"] & "&cOnly a player can view their own balance."'

  playerOnlyPayCommand$: 'lut["MESSAGE_PREFIX"] & "&cOnly a player can pay to others."'
  cannotPaySelf$: 'lut["MESSAGE_PREFIX"] & "&cYou cannot pay yourself."'
  cannotPayCrossWorldGroups$: 'lut["MESSAGE_PREFIX"] & "&cYou cannot pay to another world-group than you''re currently in."'
  # label: String
  # group_names: String
  usagePayCommand$: |
    names_string = iter_cat(group_names, (group_name) => "&e" & group_name, "&7, ", "&cNo groups found")
    lut["MESSAGE_PREFIX"] & "&cUsage: /" & label & " <player> <amount> [target group: " & names_string & "&c] [source group: " & names_string & "&c]"
  missingPermissionCommandPayTarget$: 'lut["MESSAGE_PREFIX"] & "&cNo permission to specify a custom target world-group."'
  missingPermissionCommandPaySource$: 'lut["MESSAGE_PREFIX"] & "&cNo permission to specify a custom source world-group."'
  # value: String
  argumentIsNotADouble$: 'lut["MESSAGE_PREFIX"] & "&cThe value &4" & value & " &cis not a valid floating-point number."'
  argumentIsNotStrictlyPositive$: 'lut["MESSAGE_PREFIX"] & "&cThe value &4" & value & " &cis not strictly positive."'
  # balance: String
  # amount: String
  # group: String
  notEnoughMoneyToPay$: 'lut["MESSAGE_PREFIX"] & "&cYour balance of &e" & balance & " &cin &e" & group & " &cdoes not suffice to pay &e" & amount & "&c."'
  # balance: String
  # amount: String
  # group: String
  # name: String
  paymentExceedsReceiversBalance$: 'lut["MESSAGE_PREFIX"] & "&cA payment of &e" & amount & " &cwould exceed &e" & name & "''s &cbalance."'
  # target_old_balance: String
  # target_new_balance: String
  # source_old_balance: String
  # source_new_balance: String
  # amount: String
  # target_group: String
  # source_group: String
  # sender_name: String
  # receiver_name: String
  paymentSentToPlayer$: 'lut["MESSAGE_PREFIX"] & "&7You have sent &e" & amount & " &7to &e" & receiver_name & "&7; new balance of &e" & source_group & "&7: &e" & source_new_balance & "&7."'
  # target_old_balance: String
  # target_new_balance: String
  # source_old_balance: String
  # source_new_balance: String
  # amount: String
  # target_group: String
  # source_group: String
  # sender_name: String
  # receiver_name: String
  paymentReceivedFromPlayer$: 'lut["MESSAGE_PREFIX"] & "&7You have received &e" & amount & " &7from &e" & sender_name & "&7; new balance of &e" & target_group & "&7: &e" & target_new_balance & "&7."'
  missingPermissionPayCommand$: 'lut["MESSAGE_PREFIX"] & "&cYou have no permission to use the pay command."'

  missingPermissionMoneyCommand$: 'lut["MESSAGE_PREFIX"] & "&cYou have no permission to use the money command."'
  # input: String
  # actions: List<String>
  unknownMoneyCommandAction$: 'lut["MESSAGE_PREFIX"] & "&cThe action &4" & input & " &cis not one of &e" & iter_cat(actions, (action) => "&e" & action, "&7,") & "&c."'
  # label: String
  # actions: List<String>
  # group_names: List<String>
  usageMoneyCommand$: 'lut["MESSAGE_PREFIX"] & "&cUsage: /" & label & " <" & iter_cat(actions, (action) => "&e" & action) & "&c> <player> <value> [" & iter_cat(group_names, (group_name) => "&e" & group_name) & "&c]"'
  playerOnlyMoneyCommandNoWorldGroup$: 'lut["MESSAGE_PREFIX"] & "&cOnly players can use the money-command without specifying a world-group."'
  moneyCommandConsoleName$: '"&5Console"'
  # target_old_balance: String
  # amount: String
  # group: String
  # target_name: String
  # executor_name: String
  # balance_max: String
  # balance_min: String
  moneyAddExceedsReceiversBalance$: 'lut["MESSAGE_PREFIX"] & "&cAdding &e" & amount & " &cwould exceed &e" & target_name & "''s &cmaximum balance."'
  moneyRemoveExceedsReceiversBalance$: 'lut["MESSAGE_PREFIX"] & "&cRemoving &e" & amount & " &cwould exceed &e" & target_name & "''s &cminimum balance."'
  moneySetExceedsReceiversBalance$: 'lut["MESSAGE_PREFIX"] & "&cSetting to &e" & amount & " &cwould exceed &e" & target_name & "''s &cbalance-constraints."'
  # target_new_balance: String
  moneyCommandAddExecutor$: 'lut["MESSAGE_PREFIX"] & "&7Added &a" & amount & " &7to &e" & target_name & "''s &7account in &e" & group & "&7; new balance: &e" & target_new_balance'
  moneyCommandRemoveExecutor$: 'lut["MESSAGE_PREFIX"] & "&7Removed &c" & amount & " &7from &e" & target_name & "''s &7account in &e" & group & "&7; new balance: &e" & target_new_balance'
  moneyCommandSetExecutor$: 'lut["MESSAGE_PREFIX"] & "&7Set balance of &e" & target_name & " &7to &e" & amount & " &7in &e" & group & "&7."'
  moneyCommandAddTarget$: 'lut["MESSAGE_PREFIX"] & "&e" & executor_name & " &7has added &a" & amount & " &7to your account in &e" & group & "&7; new balance: &e" & target_new_balance'
  moneyCommandRemoveTarget$: 'lut["MESSAGE_PREFIX"] & "&e" & executor_name & " &7has removed &c" & amount & " &7from your account in &e" & group & "&7; new balance: &e" & target_new_balance'
  moneyCommandSetTarget$: 'lut["MESSAGE_PREFIX"] & "&e" & executor_name & " &7has set your balance to &e" & amount & " &7in &e" & group & "&7."'

  missingPermissionCommandBalTop$: 'lut["MESSAGE_PREFIX"] & "&cYou have no permission to use the baltop command."'
  playerOnlyBalTopCommandNoWorldGroup$: 'lut["MESSAGE_PREFIX"] & "&cOnly players can use the baltop-command without specifying a world-group."'
  missingPermissionCommandBalTopOtherGroups$: 'lut["MESSAGE_PREFIX"] & "&cYou have no permission to specify other world-groups on the baltop command."'
  # label: String
  usageBalTopCommand$: 'lut["MESSAGE_PREFIX"] & "&cUsage: /" & label'
  # label: String
  # group_names: List<String>
  usageBalTopCommandOtherGroups$: 'lut["MESSAGE_PREFIX"] & "&cUsage: /" & label & " [" & iter_cat(group_names, (group_name) => "&e" & group_name, "&7, ") & "&c]"'
  # group: String
  # entries: Map<String, String>
  balTopScreen$: |
    flatten(
      "&8&m                                                  ",
      "&7Top balances of &e" & group & "&7:",
      map(entries, (entry, index) => (
        "&8- &7#" & (index + 1) & " " & key(entry) & "&7: &e" & value(entry)
      ), "&cNo top-list entries"),
      "&8&m                                                  "
    )
  pluginReloadedSuccess$: '@{MESSAGE-PLUGIN-RELOAD(prefix=lut["MESSAGE_PREFIX"])}'
  pluginReloadedError$: '@{MESSAGE-PLUGIN-RELOAD-ERROR(prefix=lut["MESSAGE_PREFIX"])}'
  missingPermissionReloadCommand$: '@{MESSAGE-MISSING-PERMISSION-RELOAD-COMMAND(prefix=lut["MESSAGE_PREFIX"])}'

lut:
  MESSAGE_PREFIX: '@{MESSAGE-PREFIX}'
